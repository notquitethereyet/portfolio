---
import '../../styles/global.css';
import Oneko from '../ui/Oneko.astro';

interface Props {
  title?: string;
  description?: string;
}

const { 
  title = "Portfolio - Boid Fish Simulation",
  description = "Portfolio website with interactive boid fish simulation background"
} = Astro.props;

const baseUrl = import.meta.env.BASE_URL.endsWith('/') ? import.meta.env.BASE_URL : `${import.meta.env.BASE_URL}/`;
---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content={description}>
    <title>{title}</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link href={`${baseUrl}css/styles.css`} rel="stylesheet">
    <link rel="icon" type="image/svg+xml" href={`${baseUrl}favicon.svg`} />
</head>
<body class="font-sans text-gray-800">
    <canvas id="boidCanvas"></canvas>
    
    <main class="relative">
        <slot />
    </main>
    
    <!-- Include Boid Simulation JavaScript -->
    <script is:inline define:vars={{ baseUrl }}>
        // Load the boid simulation script with retry
        function loadBoidScript(attempts = 0) {
            return new Promise((resolve, reject) => {
                const script = document.createElement('script');
                script.src = `${baseUrl}js/boid-simulation.js`;
                script.onload = () => resolve();
                script.onerror = () => {
                    if (attempts < 3) {
                        console.log(`Failed to load boid simulation script (attempt ${attempts + 1}/3). Retrying...`);
                        setTimeout(() => {
                            loadBoidScript(attempts + 1).then(resolve).catch(reject);
                        }, 500); // Wait 500ms before retry
                    } else {
                        console.error('Failed to load boid simulation script after 3 attempts');
                        reject();
                    }
                };
                document.body.appendChild(script);
            });
        }

        // Initialize boid simulation
        function initBoidSimulation() {
            // Check if canvas exists
            const canvas = document.getElementById('boidCanvas');
            if (!canvas) {
                console.error('Boid canvas not found');
                return;
            }
            
            // Try loading the script
            loadBoidScript().catch(err => {
                console.error('Error initializing boid simulation:', err);
            });
        }

        // Try multiple initialization points to ensure it loads
        // 1. Immediate if document is already interactive
        if (document.readyState === 'complete' || document.readyState === 'interactive') {
            initBoidSimulation();
        } else {
            // 2. On DOMContentLoaded
            document.addEventListener('DOMContentLoaded', initBoidSimulation);
        }

        // 3. Also try on window load as a final fallback
        window.addEventListener('load', () => {
            const canvas = document.getElementById('boidCanvas');
            if (canvas && !canvas.__boidInitialized) {
                initBoidSimulation();
            }
        });
    </script>
    
    <!-- Oneko animation -->
    <Oneko position="bottom-right" />
</body>
</html>
