---
interface Project {
  title: string;
  description: string;
  icon?: string;
  iconColor?: string;
  bgColor?: string;
  textColor?: string;
  tags: string[];
  link?: string;
  githubUrl?: string;
  imageUrl?: string;
}

interface Props {
  projects?: Project[];
}

const defaultProjects: Project[] = [
  {
    title: "Intrusion Detection with Neural Networks",
    description: "Engineered a neural network-based Intrusion Detection System with optimized feature selection algorithms that reduced false positives by 27%. Achieved 92.20% accuracy on UNSW-NB15 and 95.14% on NSL-KDD datasets, surpassing previous state-of-the-art benchmarks.",
    icon: "fa-shield-alt",
    iconColor: "text-blue-600", 
    bgColor: "bg-blue-50", 
    textColor: "text-blue-800", 
    tags: ["Neural Networks", "Network Security", "Feature Selection", "Python"],
    githubUrl: "https://github.com/notquitethereyet/ML-IDS"
  },
  {
    title: "RAG System with Pinecone & Groq",
    description: "Architected a high-performance Retrieval-Augmented Generation system that processes documents in real-time. Integrated Pinecone vector database with Groq's inference API to achieve efficient responses and a 35% improvement in search relevance over traditional methods.",
    icon: "fa-brain",
    iconColor: "text-blue-600", 
    bgColor: "bg-blue-50", 
    textColor: "text-blue-800", 
    tags: ["Artificial Intelligence", "Machine Learning", "LLMs", "Vector Search"],
    githubUrl: "https://github.com/notquitethereyet/simpleRAG"
  },
  {
    title: "AI-Powered Media Analysis",
    description: "Engineered a full-stack web application that analyzes online articles using NLP techniques to detect clickbait, assess content quality, and generate concise AI summaries. Achieved 92% accuracy in identifying misleading headlines and reduced reading time by 78% through AI summarization.",
    icon: "fa-newspaper",
    iconColor: "text-blue-600",
    bgColor: "bg-blue-50",
    textColor: "text-blue-800",
    tags: ["React", "Express", "Tailwind", "LLM", "Content Analysis"],
    githubUrl: "https://github.com/notquitethereyet/slop-journalism-detector"
  },
  {
    title: "DeepArtDetect: AI vs Human Art Classifier",
    description: "Developed a high-accuracy computer vision system that distinguishes between AI-generated and human-created artwork with 94% precision. Implemented and compared multiple deep learning architectures (ResNet, EfficientNet, Vision Transformer) to identify subtle patterns invisible to human observers.",
    icon: "fa-paint-brush",
    iconColor: "text-blue-600",
    bgColor: "bg-blue-50",
    textColor: "text-blue-800",
    tags: ["Machine Learning", "CNN", "Transfer Learning", "Image Classification", "Vision Transformer"],
    githubUrl: "https://github.com/notquitethereyet/ai-image-classifier"
  },
  {
    title: "HanziRecognize: Chinese Character Classifier",
    description: "Built an interactive web application featuring real-time Chinese character recognition with 97% accuracy. Implemented a custom CNN architecture optimized for handwritten character recognition, with a responsive canvas interface for drawing and instant feedback.",
    icon: "fa-language",
    iconColor: "text-blue-600",
    bgColor: "bg-blue-50",
    textColor: "text-blue-800",
    tags: ["React", "FastAPI", "CNN", "Machine Learning", "Tailwind", "Canvas"],
    githubUrl: "https://github.com/notquitethereyet/MNIST_Webapp"
  },
  /* Commented out as per portfolio review
  {
    title: "FantasyComposer: LSTM Music Generation",
    description: "Created an advanced music generation system that composes original pieces in the style of Final Fantasy soundtracks. Engineered a specialized LSTM neural network architecture that captures melodic patterns, harmonic progressions, and orchestration techniques from the iconic game series.",
    icon: "fa-music",
    iconColor: "text-blue-600",
    bgColor: "bg-blue-50",
    textColor: "text-blue-800",
    tags: ["Machine Learning", "LSTM", "MIDI", "Music Generation", "Deep Learning"],
    githubUrl: "https://github.com/notquitethereyet/FF-LSTM-MusicGen"
  },
  */
  {
    title: "Declarative NixOS Configuration Framework",
    description: "Created a modular, reproducible NixOS configuration framework that enables consistent development environments across multiple machines. Features automated system setup, containerized development environments, and declarative package management with rollback capabilities.",
    icon: "fa-terminal",
    iconColor: "text-blue-600", 
    bgColor: "bg-blue-50", 
    textColor: "text-blue-800", 
    tags: ["NixOS", "Nix", "Linux", "DevOps", "Configuration"],
    githubUrl: "https://github.com/notquitethereyet/nixchan"
  },
  /* Commented out as per portfolio review
  {
    title: "Healthcare Automation Platform",
    description: "Developed end-to-end automation workflows and secure web applications for healthcare data processing that reduced manual work by 65%. Implemented HIPAA-compliant data pipelines using Make.com, Supabase with PostgreSQL, and Google APIs to streamline patient information management.",
    icon: "fa-heartbeat",
    iconColor: "text-blue-600", 
    bgColor: "bg-blue-50", 
    textColor: "text-blue-800", 
    tags: ["Make.com", "Supabase", "Google APIs", "Automation"]
    // githubUrl: "https://github.com/notquitethereyet/healthcare-automation"
  }
  */
];

const { projects = defaultProjects } = Astro.props;
---

<section id="projects" class="py-16 px-4 bg-white bg-opacity-90 section-transition">
  <div class="max-w-6xl mx-auto">
    <h2 class="text-3xl font-bold mb-8 text-center text-blue-900">My Projects</h2>
    
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      {projects.slice(0, 6).map((project) => (
        <div class={`${project.bgColor || 'bg-blue-50'} p-6 rounded-lg shadow transform hover:-translate-y-1 transition duration-300 h-full flex flex-col`}>
          <div class="flex items-start mb-4">
            <div class={`w-10 h-10 flex items-center justify-center mr-4`}>
              <i class={`fas ${project.icon || 'fa-code'} text-2xl ${project.iconColor || 'text-blue-600'}`}></i>
            </div>
            <div>
              <h3 class={`text-xl font-bold mb-2 ${project.textColor || 'text-blue-800'}`}>{project.title}</h3>
              <p class="text-gray-600 mb-4">{project.description}</p>
            </div>
          </div>
          <div class="flex flex-wrap gap-2 mt-auto">
            {project.tags.map((tag) => (
              <span class={`text-xs px-2 py-1 rounded-full bg-blue-100 text-blue-800`}>
                {tag}
              </span>
            ))}
          </div>
          <div class="mt-4 flex gap-4">
            {project.link && (
              <a href={project.link} class={`text-sm ${project.iconColor || 'text-blue-600'} hover:underline`}>
                Learn more <i class="fas fa-arrow-right ml-1"></i>
              </a>
            )}
            {project.githubUrl && (
              <a href={project.githubUrl} class={`text-sm ${project.iconColor || 'text-blue-600'} hover:underline`} target="_blank" rel="noopener noreferrer">
                <i class="fab fa-github mr-1"></i> View on GitHub
              </a>
            )}
          </div>
        </div>
      ))}
    </div>
  </div>
</section>
