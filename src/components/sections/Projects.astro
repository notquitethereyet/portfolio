---
interface Project {
  title: string;
  description: string;
  icon?: string;
  iconColor?: string;
  bgColor?: string;
  textColor?: string;
  tags: string[];
  link?: string;
  githubUrl?: string;
  imageUrl?: string;
}

interface Props {
  projects?: Project[];
}

const defaultProjects: Project[] = [
  {
    title: "bedtime.ai – Multi-Modal AI Storytelling Platform",
    description: "Architected a multi-modal AI pipeline that transforms children's drawings into personalized stories narrated in a cloned parent's voice. Engineered the full-stack solution, integrating a fine-tuned phi-3 LLM with EfficientNet for image analysis and coqui-ai for voice synthesis. The system is containerized with Docker and delivers complete stories in under 30 seconds.",
    icon: "fa-book-reader",
    iconColor: "text-blue-600", 
    bgColor: "bg-blue-50", 
    textColor: "text-blue-800",
    tags: ["Lead Developer", "React", "FastAPI", "AI/ML", "Computer Vision", "Voice Synthesis"],
    githubUrl: "https://github.com/notquitethereyet/bedtime.ai"
  },
  {
    "title": "Agentic Job Tracker & Helper",
    "description": "Engineered a stateful AI agent using LangGraph to automate the entire job application workflow. The agent uses natural language to manage application statuses in a Supabase database, parse job descriptions, and automatically tailor a user's resume by generating targeted modifications.",
    "icon": "fa-briefcase",
    "iconColor": "text-teal-600",
    "bgColor": "bg-teal-50",
    "textColor": "text-teal-800",
    "tags": ["AI Agent", "LangGraph", "Python", "FastAPI", "LangChain", "Postgres", "Supabase"],
    "githubUrl": ""
  },
  {
    title: "Rethink BH Automation – FastAPI + Cloud Run Backend",
    description: "Built a production FastAPI service to sync real-time appointment and authorization data from Rethink BH to Supabase by emulating secure user login. Achieved 90% cost savings and reduced sync latency from 24-48h to real-time. Deployed with Docker, Secret Manager, and full observability stack on Google Cloud Platform.",
    icon: "fa-cloud",
    iconColor: "text-blue-600",
    bgColor: "bg-blue-50",
    textColor: "text-blue-800",
    tags: ["System Architecture", "FastAPI", "Cloud Run", "Google Cloud", "DevOps", "Automation"],
    githubUrl: ""
  },
  {
    title: "RAG for Document Intelligence",
    description: "Architected a high-throughput RAG system for semantic search over PDF datasets. The system leverages Pinecone for vector storage and Groq for accelerated inference, achieving a 35% improvement in search relevance over traditional keyword-based methods while maintaining sub-second response times. Implemented custom data chunking strategies to optimize retrieval accuracy.",
    icon: "fa-brain",
    iconColor: "text-blue-600", 
    bgColor: "bg-blue-50", 
    textColor: "text-blue-800", 
    tags: ["System Design", "AI/ML", "Vector Search", "RAG", "Performance Optimization"],
    githubUrl: "https://github.com/notquitethereyet/simpleRAG"
  },
  {
    title: "Enterprise ROI System with AI Agent",
    description: "Led the re-engineering of a manual Release of Information (ROI) workflow into a fully automated, AI-driven system. The AI agent I developed manages the entire document lifecycle with enterprise-grade security, directly resulting in a $20K annual cost saving and a 60% reduction in processing time while adhering to HIPAA compliance.",
    icon: "fa-robot",
    iconColor: "text-blue-600",
    bgColor: "bg-blue-50",
    textColor: "text-blue-800",
    tags: ["AI Agent", "Enterprise", "Automation", "Legal Tech", "Cost Optimization"],
    githubUrl: ""
  },
  {
    title: "Therapist Dashboard with GPT Integration",
    description: "Built and deployed a full-stack dashboard used by 20+ therapists for schedule management and progress tracking. Integrated a GPT-powered API with custom-engineered prompts to perform NLP tasks on unstructured clinical notes, achieving 92% data accuracy and improving performance compliance by 35%.",
    icon: "fa-user-md",
    iconColor: "text-blue-600",
    bgColor: "bg-blue-50",
    textColor: "text-blue-800",
    tags: ["React", "GPT API", "Healthcare", "CRM", "NLP", "Performance"],
    githubUrl: ""
  }
];

const { projects = defaultProjects } = Astro.props;
---

<section id="projects" class="py-16 px-4 section-transition">
  <div class="max-w-6xl mx-auto">
    <h2 class="text-3xl font-bold mb-8 text-center text-gradient">My Projects</h2>
    
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
      {projects.slice(0, 6).map((project) => (
        <div class={`glass-container shadow-glass transform hover:-translate-y-1 transition duration-300 h-full flex flex-col`}
          data-glass-interactive data-glass-random>
          <div class="glass-filter"></div>
          <div class="glass-overlay"></div>
          <div class="glass-specular"></div>
          <div class="glass-content p-6 flex flex-col h-full">
            <div class="flex items-start mb-4">
              <div class={`w-10 h-10 flex items-center justify-center mr-4`}>
                <i class={`fas ${project.icon || 'fa-code'} text-2xl text-[--color-brand-500]`}></i>
              </div>
              <div>
                <h3 class={`text-xl font-bold mb-2 text-accent text-shadow-md`}>{project.title}</h3>
                <p class="text-white/80 mb-4">{project.description}</p>
              </div>
            </div>
            <div class="flex flex-wrap gap-2 mt-auto">
              {project.tags.map((tag) => (
                <span class={`text-xs px-2 py-1 rounded-full bg-white/15 text-white/90 ring-1 ring-white/20` }>
                  {tag}
                </span>
              ))}
            </div>
            <div class="mt-4 flex gap-4">
              {project.link && (
                <a href={project.link} class={`text-sm text-[--color-brand-500] hover:underline transition-colors duration-200`} target="_blank" rel="noopener noreferrer">
                  <i class="fas fa-external-link-alt mr-1"></i> Live Demo
                </a>
              )}
              {project.githubUrl && (
                <a href={project.githubUrl} class={`text-sm text-[--color-brand-500] hover:underline transition-colors duration-200`} target="_blank" rel="noopener noreferrer">
                  <i class="fab fa-github mr-1"></i> View Code
                </a>
              )}
              {!project.link && !project.githubUrl && (
                <span class="text-sm text-white/50 italic">Private Project</span>
              )}
            </div>
          </div>
        </div>
      ))}
    </div>
  </div>
</section>
